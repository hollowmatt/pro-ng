{"ast":null,"code":"\"use client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  handleClientScriptLoad: null,\n  initScriptLoader: null,\n  default: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  handleClientScriptLoad: function () {\n    return handleClientScriptLoad;\n  },\n  initScriptLoader: function () {\n    return initScriptLoader;\n  },\n  default: function () {\n    return _default;\n  }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _reactdom = /*#__PURE__*/_interop_require_default._(require(\"react-dom\"));\nconst _react = /*#__PURE__*/_interop_require_wildcard._(require(\"react\"));\nconst _headmanagercontext = require(\"../shared/lib/head-manager-context\");\nconst _headmanager = require(\"./head-manager\");\nconst _requestidlecallback = require(\"./request-idle-callback\");\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = [\"onLoad\", \"onReady\", \"dangerouslySetInnerHTML\", \"children\", \"onError\", \"strategy\"];\nconst loadScript = props => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = \"\",\n    strategy = \"afterInteractive\",\n    onError\n  } = props;\n  const cacheKey = id || src;\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return;\n  }\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey);\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError);\n    return;\n  }\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady();\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey);\n  };\n  const el = document.createElement(\"script\");\n  const loadPromise = new Promise((resolve, reject) => {\n    el.addEventListener(\"load\", function (e) {\n      resolve();\n      if (onLoad) {\n        onLoad.call(this, e);\n      }\n      afterLoad();\n    });\n    el.addEventListener(\"error\", function (e) {\n      reject(e);\n    });\n  }).catch(function (e) {\n    if (onError) {\n      onError(e);\n    }\n  });\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n    afterLoad();\n  } else if (children) {\n    el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n    afterLoad();\n  } else if (src) {\n    el.src = src;\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n    ScriptCache.set(src, loadPromise);\n  }\n  for (const [k, value] of Object.entries(props)) {\n    if (value === undefined || ignoreProps.includes(k)) {\n      continue;\n    }\n    const attr = _headmanager.DOMAttributeNames[k] || k.toLowerCase();\n    el.setAttribute(attr, value);\n  }\n  if (strategy === \"worker\") {\n    el.setAttribute(\"type\", \"text/partytown\");\n  }\n  el.setAttribute(\"data-nscript\", strategy);\n  document.body.appendChild(el);\n};\nfunction handleClientScriptLoad(props) {\n  const {\n    strategy = \"afterInteractive\"\n  } = props;\n  if (strategy === \"lazyOnload\") {\n    window.addEventListener(\"load\", () => {\n      (0, _requestidlecallback.requestIdleCallback)(() => loadScript(props));\n    });\n  } else {\n    loadScript(props);\n  }\n}\nfunction loadLazyScript(props) {\n  if (document.readyState === \"complete\") {\n    (0, _requestidlecallback.requestIdleCallback)(() => loadScript(props));\n  } else {\n    window.addEventListener(\"load\", () => {\n      (0, _requestidlecallback.requestIdleCallback)(() => loadScript(props));\n    });\n  }\n}\nfunction addBeforeInteractiveToCache() {\n  const scripts = [...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'), ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]')];\n  scripts.forEach(script => {\n    const cacheKey = script.id || script.getAttribute(\"src\");\n    LoadCache.add(cacheKey);\n  });\n}\nfunction initScriptLoader(scriptLoaderItems) {\n  scriptLoaderItems.forEach(handleClientScriptLoad);\n  addBeforeInteractiveToCache();\n}\nfunction Script(props) {\n  const {\n    id,\n    src = \"\",\n    onLoad = () => {},\n    onReady = null,\n    strategy = \"afterInteractive\",\n    onError,\n    ...restProps\n  } = props;\n  // Context is available only during SSR\n  const {\n    updateScripts,\n    scripts,\n    getIsSsr,\n    appDir,\n    nonce\n  } = (0, _react.useContext)(_headmanagercontext.HeadManagerContext);\n  /**\n  * - First mount:\n  *   1. The useEffect for onReady executes\n  *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n  *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n  *   3. The useEffect for loadScript executes\n  *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n  *      Once the script is loaded, the onLoad and onReady will be called by then\n  *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n  *   5. The useEffect for onReady executes again\n  *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n  *   7. The useEffect for loadScript executes again\n  *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n  *\n  * - Second mount:\n  *   1. The useEffect for onReady executes\n  *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n  *      onReady is called, set hasOnReadyEffectCalled.current to true\n  *   3. The useEffect for loadScript executes\n  *   4. The script is already loaded, loadScript bails out\n  *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n  *   5. The useEffect for onReady executes again\n  *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n  *   7. The useEffect for loadScript executes again\n  *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n  */\n  const hasOnReadyEffectCalled = (0, _react.useRef)(false);\n  (0, _react.useEffect)(() => {\n    const cacheKey = id || src;\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady();\n      }\n      hasOnReadyEffectCalled.current = true;\n    }\n  }, [onReady, id, src]);\n  const hasLoadScriptEffectCalled = (0, _react.useRef)(false);\n  (0, _react.useEffect)(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === \"afterInteractive\") {\n        loadScript(props);\n      } else if (strategy === \"lazyOnload\") {\n        loadLazyScript(props);\n      }\n      hasLoadScriptEffectCalled.current = true;\n    }\n  }, [props, strategy]);\n  if (strategy === \"beforeInteractive\" || strategy === \"worker\") {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([{\n        id,\n        src,\n        onLoad,\n        onReady,\n        onError,\n        ...restProps\n      }]);\n      updateScripts(scripts);\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src);\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript(props);\n    }\n  }\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === \"beforeInteractive\") {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML.__html;\n          delete restProps.dangerouslySetInnerHTML;\n        }\n        return /*#__PURE__*/_react.default.createElement(\"script\", {\n          nonce: nonce,\n          dangerouslySetInnerHTML: {\n            __html: \"(self.__next_s=self.__next_s||[]).push(\" + JSON.stringify([0, {\n              ...restProps\n            }]) + \")\"\n          }\n        });\n      }\n      // @ts-ignore\n      _reactdom.default.preload(src, restProps.integrity ? {\n        as: \"script\",\n        integrity: restProps.integrity\n      } : {\n        as: \"script\"\n      });\n      return /*#__PURE__*/_react.default.createElement(\"script\", {\n        nonce: nonce,\n        dangerouslySetInnerHTML: {\n          __html: \"(self.__next_s=self.__next_s||[]).push(\" + JSON.stringify([src]) + \")\"\n        }\n      });\n    } else if (strategy === \"afterInteractive\") {\n      if (src) {\n        // @ts-ignore\n        _reactdom.default.preload(src, restProps.integrity ? {\n          as: \"script\",\n          integrity: restProps.integrity\n        } : {\n          as: \"script\"\n        });\n      }\n    }\n  }\n  return null;\n}\nObject.defineProperty(Script, \"__nextScript\", {\n  value: true\n});\nconst _default = Script;\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","module","handleClientScriptLoad","initScriptLoader","default","_export","target","all","name","enumerable","get","_default","_interop_require_default","require","_interop_require_wildcard","_reactdom","_","_react","_headmanagercontext","_headmanager","_requestidlecallback","ScriptCache","Map","LoadCache","Set","ignoreProps","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","then","afterLoad","el","document","createElement","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","k","entries","undefined","includes","attr","DOMAttributeNames","toLowerCase","setAttribute","body","appendChild","window","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","forEach","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","JSON","stringify","preload","integrity","as","__esModule","assign"],"sources":["/Users/hollowmatt/node_modules/next/dist/client/script.js"],"sourcesContent":["\"use client\";\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n0 && (module.exports = {\n    handleClientScriptLoad: null,\n    initScriptLoader: null,\n    default: null\n});\nfunction _export(target, all) {\n    for(var name in all)Object.defineProperty(target, name, {\n        enumerable: true,\n        get: all[name]\n    });\n}\n_export(exports, {\n    handleClientScriptLoad: function() {\n        return handleClientScriptLoad;\n    },\n    initScriptLoader: function() {\n        return initScriptLoader;\n    },\n    default: function() {\n        return _default;\n    }\n});\nconst _interop_require_default = require(\"@swc/helpers/_/_interop_require_default\");\nconst _interop_require_wildcard = require(\"@swc/helpers/_/_interop_require_wildcard\");\nconst _reactdom = /*#__PURE__*/ _interop_require_default._(require(\"react-dom\"));\nconst _react = /*#__PURE__*/ _interop_require_wildcard._(require(\"react\"));\nconst _headmanagercontext = require(\"../shared/lib/head-manager-context\");\nconst _headmanager = require(\"./head-manager\");\nconst _requestidlecallback = require(\"./request-idle-callback\");\n\nconst ScriptCache = new Map();\nconst LoadCache = new Set();\nconst ignoreProps = [\n    \"onLoad\",\n    \"onReady\",\n    \"dangerouslySetInnerHTML\",\n    \"children\",\n    \"onError\",\n    \"strategy\"\n];\nconst loadScript = (props)=>{\n    const { src , id , onLoad =()=>{} , onReady =null , dangerouslySetInnerHTML , children =\"\" , strategy =\"afterInteractive\" , onError  } = props;\n    const cacheKey = id || src;\n    // Script has already loaded\n    if (cacheKey && LoadCache.has(cacheKey)) {\n        return;\n    }\n    // Contents of this script are already loading/loaded\n    if (ScriptCache.has(src)) {\n        LoadCache.add(cacheKey);\n        // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n        // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n        ScriptCache.get(src).then(onLoad, onError);\n        return;\n    }\n    /** Execute after the script first loaded */ const afterLoad = ()=>{\n        // Run onReady for the first time after load event\n        if (onReady) {\n            onReady();\n        }\n        // add cacheKey to LoadCache when load successfully\n        LoadCache.add(cacheKey);\n    };\n    const el = document.createElement(\"script\");\n    const loadPromise = new Promise((resolve, reject)=>{\n        el.addEventListener(\"load\", function(e) {\n            resolve();\n            if (onLoad) {\n                onLoad.call(this, e);\n            }\n            afterLoad();\n        });\n        el.addEventListener(\"error\", function(e) {\n            reject(e);\n        });\n    }).catch(function(e) {\n        if (onError) {\n            onError(e);\n        }\n    });\n    if (dangerouslySetInnerHTML) {\n        // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n        el.innerHTML = dangerouslySetInnerHTML.__html || \"\";\n        afterLoad();\n    } else if (children) {\n        el.textContent = typeof children === \"string\" ? children : Array.isArray(children) ? children.join(\"\") : \"\";\n        afterLoad();\n    } else if (src) {\n        el.src = src;\n        // do not add cacheKey into LoadCache for remote script here\n        // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n        ScriptCache.set(src, loadPromise);\n    }\n    for (const [k, value] of Object.entries(props)){\n        if (value === undefined || ignoreProps.includes(k)) {\n            continue;\n        }\n        const attr = _headmanager.DOMAttributeNames[k] || k.toLowerCase();\n        el.setAttribute(attr, value);\n    }\n    if (strategy === \"worker\") {\n        el.setAttribute(\"type\", \"text/partytown\");\n    }\n    el.setAttribute(\"data-nscript\", strategy);\n    document.body.appendChild(el);\n};\nfunction handleClientScriptLoad(props) {\n    const { strategy =\"afterInteractive\"  } = props;\n    if (strategy === \"lazyOnload\") {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestidlecallback.requestIdleCallback)(()=>loadScript(props));\n        });\n    } else {\n        loadScript(props);\n    }\n}\nfunction loadLazyScript(props) {\n    if (document.readyState === \"complete\") {\n        (0, _requestidlecallback.requestIdleCallback)(()=>loadScript(props));\n    } else {\n        window.addEventListener(\"load\", ()=>{\n            (0, _requestidlecallback.requestIdleCallback)(()=>loadScript(props));\n        });\n    }\n}\nfunction addBeforeInteractiveToCache() {\n    const scripts = [\n        ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n        ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]')\n    ];\n    scripts.forEach((script)=>{\n        const cacheKey = script.id || script.getAttribute(\"src\");\n        LoadCache.add(cacheKey);\n    });\n}\nfunction initScriptLoader(scriptLoaderItems) {\n    scriptLoaderItems.forEach(handleClientScriptLoad);\n    addBeforeInteractiveToCache();\n}\nfunction Script(props) {\n    const { id , src =\"\" , onLoad =()=>{} , onReady =null , strategy =\"afterInteractive\" , onError , ...restProps } = props;\n    // Context is available only during SSR\n    const { updateScripts , scripts , getIsSsr , appDir , nonce  } = (0, _react.useContext)(_headmanagercontext.HeadManagerContext);\n    /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */ const hasOnReadyEffectCalled = (0, _react.useRef)(false);\n    (0, _react.useEffect)(()=>{\n        const cacheKey = id || src;\n        if (!hasOnReadyEffectCalled.current) {\n            // Run onReady if script has loaded before but component is re-mounted\n            if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n                onReady();\n            }\n            hasOnReadyEffectCalled.current = true;\n        }\n    }, [\n        onReady,\n        id,\n        src\n    ]);\n    const hasLoadScriptEffectCalled = (0, _react.useRef)(false);\n    (0, _react.useEffect)(()=>{\n        if (!hasLoadScriptEffectCalled.current) {\n            if (strategy === \"afterInteractive\") {\n                loadScript(props);\n            } else if (strategy === \"lazyOnload\") {\n                loadLazyScript(props);\n            }\n            hasLoadScriptEffectCalled.current = true;\n        }\n    }, [\n        props,\n        strategy\n    ]);\n    if (strategy === \"beforeInteractive\" || strategy === \"worker\") {\n        if (updateScripts) {\n            scripts[strategy] = (scripts[strategy] || []).concat([\n                {\n                    id,\n                    src,\n                    onLoad,\n                    onReady,\n                    onError,\n                    ...restProps\n                }\n            ]);\n            updateScripts(scripts);\n        } else if (getIsSsr && getIsSsr()) {\n            // Script has already loaded during SSR\n            LoadCache.add(id || src);\n        } else if (getIsSsr && !getIsSsr()) {\n            loadScript(props);\n        }\n    }\n    // For the app directory, we need React Float to preload these scripts.\n    if (appDir) {\n        // Before interactive scripts need to be loaded by Next.js' runtime instead\n        // of native <script> tags, because they no longer have `defer`.\n        if (strategy === \"beforeInteractive\") {\n            if (!src) {\n                // For inlined scripts, we put the content in `children`.\n                if (restProps.dangerouslySetInnerHTML) {\n                    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n                    restProps.children = restProps.dangerouslySetInnerHTML.__html;\n                    delete restProps.dangerouslySetInnerHTML;\n                }\n                return /*#__PURE__*/ _react.default.createElement(\"script\", {\n                    nonce: nonce,\n                    dangerouslySetInnerHTML: {\n                        __html: \"(self.__next_s=self.__next_s||[]).push(\" + JSON.stringify([\n                            0,\n                            {\n                                ...restProps\n                            }\n                        ]) + \")\"\n                    }\n                });\n            }\n            // @ts-ignore\n            _reactdom.default.preload(src, restProps.integrity ? {\n                as: \"script\",\n                integrity: restProps.integrity\n            } : {\n                as: \"script\"\n            });\n            return /*#__PURE__*/ _react.default.createElement(\"script\", {\n                nonce: nonce,\n                dangerouslySetInnerHTML: {\n                    __html: \"(self.__next_s=self.__next_s||[]).push(\" + JSON.stringify([\n                        src\n                    ]) + \")\"\n                }\n            });\n        } else if (strategy === \"afterInteractive\") {\n            if (src) {\n                // @ts-ignore\n                _reactdom.default.preload(src, restProps.integrity ? {\n                    as: \"script\",\n                    integrity: restProps.integrity\n                } : {\n                    as: \"script\"\n                });\n            }\n        }\n    }\n    return null;\n}\nObject.defineProperty(Script, \"__nextScript\", {\n    value: true\n});\nconst _default = Script;\n\nif ((typeof exports.default === 'function' || (typeof exports.default === 'object' && exports.default !== null)) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', { value: true });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}